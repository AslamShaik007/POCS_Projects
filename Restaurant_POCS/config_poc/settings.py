"""
Django settings for config_poc project.

Generated by 'django-admin startproject' using Django 5.0.3.

For more information on this file, see
https://docs.djangoproject.com/en/5.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.0/ref/settings/
"""
import os
from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

TEMPLATE_DIR    = BASE_DIR/'templates'
STATIC_DIR      = BASE_DIR/'static'
UPLOAD_DIR      = BASE_DIR/'uploads'

LOG_FILE = "debug.log"
LOG_PATH = BASE_DIR / LOG_FILE

if not os.path.exists(LOG_PATH):
    f = open(LOG_PATH, "a").close()


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-6@$%ye+9$a3mwdwcqmy88hpr^8e*30=lx(rj2yp-9+l-7q3mpu'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['*']


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'allpages',
    'control_panel',
    'django_extensions',
]
MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',  # Include CSRF middleware
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    # 'allpages.authentication.EmailOrMobileBackend',  # Include your custom authentication backend
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

# AUTHENTICATION_BACKENDS = [
#     "allpages.authentication.LoginBackend",
#     "django.contrib.auth.backends.ModelBackend",
# ]

ROOT_URLCONF = 'config_poc.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [TEMPLATE_DIR],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                # Below are the Custom function 
                'control_panel.context_processors.common_data_ud',
                'allpages.context_processors.get_common_data',
            ],
        },
    },
]

WSGI_APPLICATION = 'config_poc.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.0/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}



# DATABASES = {
#     "default": {
#         "ENGINE": "django.db.backends.mysql",
#         "HOST": "localhost",
#         "NAME": "restaurent_poc_enhancements3",
#         "USER": "root",
#         "PASSWORD": "Suri@9502",
#     }
# }


# Password validation
# https://docs.djangoproject.com/en/5.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.0/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = "Asia/Kolkata"

USE_I18N = True

USE_TZ = True

SESSION_ENGINE = 'django.contrib.sessions.backends.db'

# SESSION_COOKIE_AGE = 60 * 60 * 24 * 14  # 2 weeks (in seconds)
# SESSION_SAVE_EVERY_REQUEST = True  # Save the session to the database on every request

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.0/howto/static-files/

BASE_DIR = os.path.dirname(os.path.dirname(__file__))
STATIC_URL = 'static/'

STATICFILES_DIRS = [
    STATIC_DIR,
]

MEDIA_URL = 'media/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')

# SESSION_COOKIE_SECURE = True
CSRF_COOKIE_SECURE = True

# Default primary key field type
# https://docs.djangoproject.com/en/5.0/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

AUTH_USER_MODEL = "allpages.CustomUser"

###############################################################################
# EMAIL CONFIGURATION
###############################################################################

# Enquiry forms Mail_Id
EMAIL_HOST = "mail.vitelglobal.com"
EMAIL_PORT = 465
EMAIL_HOST_USER = "no-reply"
EMAIL_HOST_PASSWORD = "82z1GRC#*0eN"
EMAIL_USE_TLS = True
DEFAULT_FROM_EMAIL = "no-reply@varundigitalmedia.com"


###############################################################
# Twilio Setting 
###############################################################

twilio_account_sid='AC706f366060ffc42e59e3943b0854282d'
twilio_auth_token='1ec51087621c714c46092158e637607d'




###############################################################
# Session Handling 
###############################################################
# save logs in a file
LOGGING = {
    "version": 1,
    "disable_existing_loggers": True,
    "formatters": {
        "standard": {
            "format": "{levelname} {asctime} {module} {process:d} {thread:d} {message} {filename} {lineno}",
            "style": "{",
        },
    },
    "filters": {
        "require_debug_true": {
            "()": "django.utils.log.RequireDebugTrue",
        },
    },
    "handlers": {
        "file": {
            "level": "DEBUG",
            "class": "logging.handlers.RotatingFileHandler",
            "filename": LOG_PATH,
            "maxBytes": 1024 * 1024 * 1,  # 1MB
            "formatter": "standard",
        },
    },
    "loggers": {
        "django": {"handlers": ["file"], "propagate": True},
    },
}